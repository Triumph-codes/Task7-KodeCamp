from typing import Optional, Dict, Any
from sqlmodel import Field, SQLModel, Column, JSON, String
import json

class Student(SQLModel, table=True):
    """
    SQLModel for the Student table in the database.
    We store the grades as a string and handle the JSON conversion ourselves.
    """
    id: Optional[int] = Field(default=None, primary_key=True)
    name: str = Field(index=True)
    age: int
    email: str = Field(unique=True)
    # Store grades as a JSON-formatted string
    grades: str = Field(default="{}")

class StudentCreate(SQLModel):
    """
    Pydantic model for creating a new student (used in POST requests).
    It excludes the ID as it is generated by the database.
    """
    name: str
    age: int
    email: str
    grades: Dict[str, Any] = {}

class StudentUpdate(SQLModel):
    """
    Pydantic model for updating an existing student (used in PUT requests).
    Optional fields allow partial updates.
    """
    name: Optional[str] = None
    age: Optional[int] = None
    email: Optional[str] = None
    grades: Optional[Dict[str, Any]] = None